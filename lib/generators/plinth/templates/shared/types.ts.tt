// #STYLE_GUIDE: Centralized TypeScript interfaces for <%= class_name %>
// - Generated by `plinth:types`
// - Used across all components that interact with <%= class_name %> data

export interface <%= class_name %> {
  id: string;
<% non_reference_attributes.each do |attribute| -%>
<% next if %w[created_at updated_at].include?(attribute.name) -%>
  <%= attribute.name.camelize(:lower) %>: <%= typescript_type(attribute) %>;
<% end -%>
<% reference_attributes.each do |attribute| -%>
  <%= reference_foreign_key(attribute).camelize(:lower) %>: string;
  <%= attribute.name.camelize(:lower) %>DisplayName?: string;
<% end -%>
  displayName: string;
  createdAt: string;
  updatedAt: string;
}

<% unique_reference_collections.each do |collection| -%>
export interface <%= collection.classify %> {
  id: string;
  displayName: string;
}
<% end -%>
